{"version":3,"sources":["../src/factory.js"],"names":["plotComponentFactory","eventNames","updateEvents","isBrowser","window","Plotly","PlotlyComponent","props","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","then","newPlot","el","data","layout","config","frames","onInitialized","catch","console","error","err","onError","nextProps","revision","numPrevFrames","length","numNextFrames","react","onUpdate","onPurge","removeEventListener","removeUpdateEvents","purge","removeListener","i","on","callback","_transitionData","_frames","figure","propsIn","invoke","useResizeHandler","Plots","resize","addEventListener","debug","gd","eventName","prop","hasHandler","toLowerCase","divId","style","className","Component","propTypes","PropTypes","arrayOf","object","number","func","bool","string","defaultProps","position","display"],"mappings":"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","file":"factory.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_doubleclick',\n  'plotly_animated',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n    }\n\n    componentDidMount() {\n      this.p = this.p\n        .then(() => {\n          return Plotly.newPlot(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => this.syncWindowResize(null, true))\n        .then(this.syncEventHandlers)\n        .then(this.attachUpdateEvents)\n        .then(() => this.figureCallback(this.props.onInitialized))\n        .catch(err => {\n          console.error('Error while plotting:', err);\n          return this.props.onError && this.props.onError(err);\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n      if (\n        nextProps.revision !== void 0 &&\n        nextProps.revision === this.props.revision\n      ) {\n        // if revision is set and unchanged, do nothing\n        return;\n      }\n\n      const numPrevFrames =\n        this.props.frames && this.props.frames.length\n          ? this.props.frames.length\n          : 0;\n      const numNextFrames =\n        nextProps.frames && nextProps.frames.length\n          ? nextProps.frames.length\n          : 0;\n      if (\n        nextProps.layout === this.props.layout &&\n        nextProps.data === this.props.data &&\n        nextProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      ) {\n        // prevent infinite loops when component is re-rendered after onUpdate\n        // frames *always* changes identity so fall back to check length only :(\n        return;\n      }\n\n      this.p = this.p\n        .then(() => {\n          return Plotly.react(this.el, {\n            data: nextProps.data,\n            layout: nextProps.layout,\n            config: nextProps.config,\n            frames: nextProps.frames,\n          });\n        })\n        .then(() => this.syncEventHandlers(nextProps))\n        .then(() => this.syncWindowResize(nextProps))\n        .then(() => this.figureCallback(nextProps.onUpdate))\n        .catch(err => {\n          console.error('Error while plotting:', err);\n          this.props.onError && this.props.onError(err);\n        });\n    }\n\n    componentWillUnmount() {\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) return;\n\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.on(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) return;\n\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.removeListener(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData\n          ? this.el._transitionData._frames\n          : null;\n        const figure = {data, layout, frames}; // for extra clarity!\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(propsIn, invoke) {\n      const props = propsIn || this.props;\n      if (!isBrowser) return;\n\n      if (props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => {\n          return Plotly.Plots.resize(this.el);\n        };\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers(propsIn) {\n      // Allow use of nextProps if passed explicitly:\n      const props = propsIn || this.props;\n\n      for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const prop = props['on' + eventName];\n        const hasHandler = !!this.handlers[eventName];\n\n        if (prop && !hasHandler) {\n          this.handlers[eventName] = prop;\n          this.el.on(\n            'plotly_' + eventName.toLowerCase(),\n            this.handlers[eventName]\n          );\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.el.removeListener(\n            'plotly_' + eventName.toLowerCase(),\n            this.handlers[eventName]\n          );\n          delete this.handlers[eventName];\n        }\n      }\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  for (let i = 0; i < eventNames.length; i++) {\n    PlotlyComponent.propTypes['on' + eventNames[i]] = PropTypes.func;\n  }\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n"]}